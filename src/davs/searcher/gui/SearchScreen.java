/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package davs.searcher.gui;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.IOException;
import java.util.Queue;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.ParallelGroup;
import javax.swing.GroupLayout.SequentialGroup;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

import davs.searcher.program.MainProgram;
import davs.searcher.program.SearchScreenHelper;

/**
 * 
 * @author davors
 */
public class SearchScreen extends javax.swing.JFrame {

    /**
	 * 
	 */
    private static final long serialVersionUID = 1504986303558444346L;

    private davs.searcher.program.SearchScreenHelper searchHelper;

    String[] suggestions;

    /**
     * Creates new form SearchScreen
     */
    public SearchScreen(davs.searcher.program.SearchScreenHelper searchHelper) {
        setSearchHelper(searchHelper);
        initComponents();

        if (getSearchHelper() != null)
            jTextField1.setText(getSearchHelper().getCurrentIndexPath());
    }

    public SearchScreen() {
        initComponents();
    }

    public SearchScreen(String indexPath) {
        initComponents();

        if (indexPath != null && indexPath.length() > 0)
            jTextField1.setText(indexPath);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed"
    // desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Index"));

        jLabel1.setText("Current Index :");

        setTitle("Search index");

        jTextField1.setEditable(false);
        jTextField1.setText("(path to current index)");

        jLabel2.setText("Search Index : ");

        jTextField2.setText("(enter term to search index)");

        // TODO there must be better way to do this...?
        jTextField2.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent arg0) {
                // TODO Auto-generated method stub

            }

            @Override
            public void keyReleased(KeyEvent arg0) {
                if (arg0.getKeyCode() == KeyEvent.VK_ENTER)
                    getTerm();
            }

            @Override
            public void keyPressed(KeyEvent arg0) {
                // TODO Auto-generated method stub

            }
        });

        jButton1.setText("Search");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Add More Files To Index");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jLabel3.setText("Similar Words :");

        jLabel4.setText("Suggestion1");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.setText("Suggestion2");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setText("Suggestion3");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(
                jPanel3);
        jPanel3.setLayout(jPanel3Layout);

        
        JPanel Row1Panel = buildRow1();
        JPanel Row2Panel = buildRow2();
        JPanel Row3Panel = buildRow3();
        
        jPanel3Layout.setHorizontalGroup(jPanel3Layout
                .createSequentialGroup()
                .addContainerGap()
                .addGroup(buildRowsHorizontally(jPanel3Layout,
                                                Row1Panel,
                                                Row2Panel,
                                                Row3Panel))
                .addContainerGap());

        jPanel3Layout.setVerticalGroup(jPanel3Layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(buildRowsVertically(jPanel3Layout,
                                              Row1Panel,
                                              Row2Panel,
                                              Row3Panel)
                                              .addContainerGap(33, Short.MAX_VALUE)));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Hits"));

        jTable1.setModel(new DefaultTableModel(new Object[][] {},
                new String[] { "File Path" }));

        jTable1.setColumnSelectionAllowed(true);

        jTable1.setCellSelectionEnabled(true);

        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel()
                .getSelectionModel()
                .setSelectionMode(
                        javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
                jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
                javax.swing.GroupLayout.Alignment.LEADING).addGroup(
                javax.swing.GroupLayout.Alignment.TRAILING,
                jPanel1Layout.createSequentialGroup().addContainerGap()
                        .addComponent(jScrollPane1).addContainerGap()));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(
                javax.swing.GroupLayout.Alignment.LEADING).addGroup(
                jPanel1Layout
                        .createSequentialGroup()
                        .addComponent(jScrollPane1,
                                javax.swing.GroupLayout.PREFERRED_SIZE, 325,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
                getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(
                        javax.swing.GroupLayout.Alignment.TRAILING,
                        layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(
                                                        jPanel1,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        Short.MAX_VALUE)
                                                .addComponent(
                                                        jPanel3,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        Short.MAX_VALUE))
                                .addContainerGap()));
        layout.setVerticalGroup(layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(
                        layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel3,
                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel1,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        Short.MAX_VALUE).addContainerGap()));

        pack();

        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private SequentialGroup buildRowsVertically(
            javax.swing.GroupLayout jPanel3Layout, JPanel Row1Panel,
            JPanel Row2Panel, JPanel Row3Panel) {
        return jPanel3Layout.createSequentialGroup().addContainerGap()
                .addComponent(Row1Panel)
                .addGap(18, 18, 18)
                .addComponent(Row2Panel)
                .addGap(18, 18, 18)
                .addComponent(Row3Panel);
    }

    private ParallelGroup buildRowsHorizontally(
            javax.swing.GroupLayout jPanel3Layout, JPanel Row1Panel,
            JPanel Row2Panel, JPanel Row3Panel) {
        return jPanel3Layout
                .createParallelGroup(
                        javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Row1Panel)
                .addComponent(Row2Panel)
                .addComponent(Row3Panel);
    }

    private JPanel buildRow1() {
        JPanel panel = new JPanel();
        GroupLayout layout = new GroupLayout(panel);
        panel.setLayout(layout);
        layout.setHorizontalGroup(layout
                .createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(
                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1));
        layout.setVerticalGroup(layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(jTextField1,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.PREFERRED_SIZE));
        return panel;
    }

    private JPanel buildRow2() {
        JPanel panel = new JPanel();
        GroupLayout layout = new GroupLayout(panel);
        panel.setLayout(layout);
        layout.setHorizontalGroup(layout
                .createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(
                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2,
                        javax.swing.GroupLayout.PREFERRED_SIZE, 381,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(
                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2));
        layout.setVerticalGroup(layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(jTextField2,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton1)
                .addComponent(jButton2));
        return panel;
    }
    
    private JPanel buildRow3() {
        JPanel panel = new JPanel();
        GroupLayout layout = new GroupLayout(panel);
        panel.setLayout(layout);
        layout.setHorizontalGroup(layout
                .createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE,
                        254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(
                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE,
                        216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(
                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE,
                        249, javax.swing.GroupLayout.PREFERRED_SIZE));
        layout.setVerticalGroup(layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(jLabel4)
                .addComponent(jLabel5)
                .addComponent(jLabel6));
        return panel;
    }
    


    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jButton1MouseClicked

        getTerm();

    }// GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jButton2MouseClicked

        SearchScreenHelper sh = null;

        try {
            sh = new SearchScreenHelper(jTextField1.getText());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this,
                    "Application initialization failed, restart application");
        }

        boolean isAppended = sh.appendToIndex(jTextField1.getText());

        if (isAppended)
            JOptionPane.showMessageDialog(this, "Files added to the index");
        else
            JOptionPane.showMessageDialog(this,
                    "Nothing was added to the index");

    }// GEN-LAST:event_jButton2MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {

        mouseClicked(jLabel4.getText());
    }

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {

        mouseClicked(jLabel5.getText());
    }

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {

        mouseClicked(jLabel6.getText());
    }

    /**
     * @param args
     *            the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        // <editor-fold defaultstate="collapsed"
        // desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase
         * /tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
                    .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchScreen.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchScreen.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchScreen.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchScreen.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SearchScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;

    // End of variables declaration//GEN-END:variables

    private void mouseClicked(String term) {

        String newTerm = term.replaceAll("^\\s+", "");
        SearchScreenHelper sh = null;

        try {
            sh = new SearchScreenHelper(jTextField1.getText());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this,
                    "Application initialization failed, restart application");
        }

        Queue<String> hits = null;

        if (newTerm != null)
            hits = sh.search(newTerm);

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // spell check
        if (MainProgram.isSpellCheckEnabled)
            suggestions = MainProgram.spellCheck
                    .getSpellSuggestions(newTerm, 3);

        if (suggestions != null && suggestions.length >= 1
                && MainProgram.isSpellCheckEnabled) {
            jLabel4.setText(suggestions[0]);
            jLabel4.setForeground(Color.BLUE);
        } else
            jLabel4.setText("");

        if (suggestions != null && suggestions.length >= 2
                && MainProgram.isSpellCheckEnabled) {
            jLabel5.setText(suggestions[1]);
            jLabel5.setForeground(Color.BLUE);
        } else
            jLabel5.setText("");

        if (suggestions != null && suggestions.length >= 3
                && MainProgram.isSpellCheckEnabled) {
            jLabel6.setText(suggestions[2]);
            jLabel6.setForeground(Color.BLUE);
        } else
            jLabel6.setText("");
        // end spell check

        if (hits == null)
            model.setRowCount(0);
        else if (hits.isEmpty())
            model.setRowCount(0);
        else {
            model.setRowCount(0);

            while (!hits.isEmpty()) {
                model.addRow(new String[] { hits.poll() });
            }
        }

    }

    private void getTerm() {
        String term = null;

        if (jTextField2.getText() != null)
            term = jTextField2.getText();

        mouseClicked(term);
    }

    public davs.searcher.program.SearchScreenHelper getSearchHelper() {
        return searchHelper;
    }

    public void setSearchHelper(
            davs.searcher.program.SearchScreenHelper searchHelper) {
        this.searchHelper = searchHelper;
    }

}
